server {
    listen 80;
    server_name openshelf.example.com;
    location / {
        return 301 https://openshelf.example.com$request_uri;
    }
}

server {
   listen 443 ssl;
   ssl_certificate /etc/nginx/certs/cert.pem;
   ssl_certificate_key /etc/nginx/certs/privkey.pem;
   server_name openshelf.example.com;
   
   # Allow larger file uploads (for book covers, images, etc.)
   client_max_body_size 5M;
   
   # Serve uploaded images directly from backend
   location /uploads/ {
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_pass http://192.168.11.27:3001;
   }
   
   # Proxy API requests to backend
   location /api/ {
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_cache_bypass $http_upgrade;
        proxy_pass http://192.168.11.27:3001;
   }
   
   # Proxy frontend
   location / {
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_redirect http:// https://;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_pass http://192.168.11.27:3000;
    }
}